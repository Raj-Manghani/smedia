name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: smedia_user
          POSTGRES_PASSWORD: smedia_pass
          POSTGRES_DB: smedia_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U smedia_user" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DATABASE_URL: postgresql://smedia_user:smedia_pass@localhost:5432/smedia_db
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt
      - name: Lint backend code
        run: |
          cd backend
          flake8 . --ignore=E501
      - name: Run backend tests
        run: |
          cd backend
          pytest

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
      - name: Run frontend tests
        run: |
          cd frontend
          npm test

  data-pipeline-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install pipeline dependencies
        run: |
          cd data-pipeline
          pip install -r requirements.txt
      - name: Lint data pipeline code
        run: |
          cd data-pipeline
          flake8 .
      - name: Run pipeline tests
        run: |
          cd data-pipeline
          pytest

  build-and-push:
    needs: [backend-tests, frontend-tests, data-pipeline-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push backend image
        run: |
          docker build -t ghcr.io/${{ github.actor }}/smedia-backend:latest ./backend
          docker push ghcr.io/${{ github.actor }}/smedia-backend:latest
      - name: Build and push frontend image
        run: |
          docker build --build-arg NEXT_PUBLIC_API_URL=http://localhost:8000 -t ghcr.io/${{ github.actor }}/smedia-frontend:latest ./frontend
          docker push ghcr.io/${{ github.actor }}/smedia-frontend:latest
      - name: Build and push data-pipeline image
        run: |
          docker build -t ghcr.io/${{ github.actor }}/smedia-data-pipeline:latest ./data-pipeline
          docker push ghcr.io/${{ github.actor }}/smedia-data-pipeline:latest

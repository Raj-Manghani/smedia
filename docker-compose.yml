version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  postgres:
    image: timescale/timescaledb:latest-pg14
    environment:
      POSTGRES_USER: smedia_user
      POSTGRES_PASSWORD: smedia_pass
      POSTGRES_DB: smedia_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  backend:
    build: ./backend
    depends_on:
      - postgres
      - kafka
      - elasticsearch
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://smedia_user:smedia_pass@postgres:5432/smedia_db
      - KAFKA_BROKER=kafka:9092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "8000:8000"

  frontend:
    build: ./frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"

  nlp-service:
    build: ./backend
    depends_on:
      - kafka
    env_file: .env
    environment:
      - KAFKA_BROKER=kafka:9092
    command: python nlp_service.py
    ports:
      - "8500:8500"

  data-pipeline:
    build: ./data-pipeline
    depends_on:
      - kafka
    env_file: .env
    environment:
      - KAFKA_BROKER=kafka:9092
    command: python producer.py

volumes:
  postgres_data:
  es_data:
